version: "3"
# openssl req -new -newkey rsa:2048 -nodes -keyout ssl.key -out ssl.csr   
services:
  nginx:
    container_name: proxy
    volumes:
      - ./proxy/conf/:/etc/nginx/conf.d/
    image: proxy
    ports:
    - "443:443"
    - "3000:3000"
    - "3001:3001"
    - "3333:3333"
    - "3334:3334"
    - "9090:8080"
    depends_on: 
        - api
        - db
        - user
        - ceo
        - adminer
      

  api:
    build: 
      context: ./order-backend-rust
      dockerfile: dev.Dockerfile
    volumes:
      - ./order-backend-rust:/usr/src/myapp
      - /usr/src/myapp/target
    command: cargo watch --poll -x 'run -- --RUST_BACKTRACE=1'
    depends_on: 
      - db
      - ws
    restart: always
    links: 
      - db
      - ws
    
  ws: 
    build: 
      context: ./order-backend-websocket
      dockerfile: dev.Dockerfile
    volumes:
      - ./order-backend-websocket:/usr/src/myapp
      - /usr/src/myapp/target
    command: cargo watch --poll -x run
    depends_on: 
      - db
    restart: always
    links: 
      - db
    
  user: 
    build: 
      context: ./order-frontend-user
      dockerfile: Dockerfile
    volumes:
      - ./order-frontend-user:/usr/src/app
      - /usr/src/app/node_modules
    command: "npm run dev"
    restart: always
   
    environment:
      - CHOKIDAR_USEPOLLING=true
  ceo: 
    build: 
      context: ./order-frontend-ceo
      dockerfile: Dockerfile
    volumes:
      - ./order-frontend-ceo:/usr/src/app
      - /usr/src/app/node_modules
    command: "npm run dev"
    restart: always
   
    environment:
      - CHOKIDAR_USEPOLLING=true
  db:
    image: postgres:11
    restart: always
    environment:
      POSTGRES_PASSWORD: dlacjfrb
      POSTGRES_USER: dlacjfrb
      POSTGRES_DB: dev
    ports:
      - 5432:5432
 
  adminer:
    image: adminer
    restart: always
   


